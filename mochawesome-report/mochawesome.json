{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2022-10-26T06:49:56.100Z",
    "end": "2022-10-26T06:49:56.166Z",
    "duration": 66,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "dea4fda8-a172-4992-9b4a-322a3e2cd563",
      "title": "",
      "fullFile": "D:\\myProjects\\proj1\\test\\test.js",
      "file": "\\test\\test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d9dc3ca7-01c5-46ad-900e-e24f39f05ca8",
          "title": "Users",
          "fullFile": "D:\\myProjects\\proj1\\test\\test.js",
          "file": "\\test\\test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET/users",
              "fullTitle": "Users GET/users",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return request.get(apiUrl).then((res)  => {\n    //console.log(err);\n    //onsole.log(res.body);\n    //console.log(res.text);\n    //expect(res.body).to.not.be.empty;\n    //expect(res.body).to.be.empty;\n    //expect(res.body).to.be.a('array');\n\n\n    \n    let data1 = JSON.parse([res.text]);\n     console.log(data1);\n\n    //expect(data1).to.not.be.empty;\n    //expect(data1).to.be.empty;\n    //expect(data1).to.have.lengthOf(3);\n    //expect(data1).to.have.lengthOf.above(146);\n    //expect(data1).to.have.lengthOf.at.least(2);\n    //expect(data1).to.have.property('email');\n    //expect(data1).to.have.property('name');            \n    //expect(data1).to.have.any.keys('name');\n    expect(data1).to.have.deep.property('name');\n\n    \n    \n});",
              "err": {},
              "uuid": "04778c11-3587-4132-b02d-c32392588db3",
              "parentUUID": "d9dc3ca7-01c5-46ad-900e-e24f39f05ca8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT/check",
              "fullTitle": "Users PUT/check",
              "timedOut": false,
              "duration": 9,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let myjson = {\"a\":2,\"b\":5};\nlet ret2 = await request.put('check').set(\"Authorization\",\"Bearer ${token}\").send(myjson);\n  expect(ret2.text).to.be.undefined;",
              "err": {
                "message": "AssertionError: expected '\"updated\"' to be undefined",
                "estack": "AssertionError: expected '\"updated\"' to be undefined\n    at Context.<anonymous> (test\\test.js:122:32)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)",
                "diff": null
              },
              "uuid": "b1b7f9e7-1168-4d3c-9100-472623a69169",
              "parentUUID": "d9dc3ca7-01c5-46ad-900e-e24f39f05ca8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "04778c11-3587-4132-b02d-c32392588db3"
          ],
          "failures": [
            "b1b7f9e7-1168-4d3c-9100-472623a69169"
          ],
          "pending": [],
          "skipped": [],
          "duration": 53,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.1.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}